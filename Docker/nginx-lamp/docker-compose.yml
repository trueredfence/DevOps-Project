version: "3.9"
services:
  web1:
    build:
      context: .
      dockerfile: "./Dockerfile.apache"
    container_name: "${COMPOSE_PROJECT_NAME}-Web1"
    hostname: web1
    restart: "always"
    ports:
      - "${WEB1_HOST_PORT-81}:${APACHE_PORT-5000}"
    # links:
    #   - database
    volumes:
      - type: bind
        source: ${DOCUMENT_ROOT-./www}
        target: ${APACHE_DOCUMENT_ROOT-/var/www/html}
      - type: bind
        source: ${PHP_INI-./config/php/php.ini}
        target: /usr/local/etc/php/php.ini
      - type: bind
        source: ${SSL_DIR-./config/ssl}
        target: /etc/apache2/ssl/
      - type: bind
        source: ${VHOSTS_DIR-./config/vhosts}
        target: /etc/apache2/sites-enabled
      - type: volume
        source: "log_vol"
        target: /var/log/apache2
    environment:
      DOMAIN_NAME: ${DOMAIN_NAME-fusion}
      APACHE_DOCUMENT_ROOT: ${APACHE_DOCUMENT_ROOT-/var/www/html}
      APACHE_PORT: ${APACHE_PORT-5000}
  web2:
    build:
      context: .
      dockerfile: "./Dockerfile.apache"
    container_name: "${COMPOSE_PROJECT_NAME}-Web2"
    hostname: web2
    restart: "always"
    ports:
      - "${WEB2_HOST_PORT-82}:${APACHE_PORT-5000}"
    links:
      - database
    volumes:
      - type: bind
        source: ${DOCUMENT_ROOT-./www}
        target: ${APACHE_DOCUMENT_ROOT-/var/www/html}
      - type: bind
        source: ${PHP_INI-./config/php/php.ini}
        target: /usr/local/etc/php/php.ini
      - type: bind
        source: ${SSL_DIR-./config/ssl}
        target: /etc/apache2/ssl/
      - type: bind
        source: ${VHOSTS_DIR-./config/vhosts}
        target: /etc/apache2/sites-enabled
      - type: volume
        source: "log_vol"
        target: /var/log/apache2
    environment:
      DOMAIN_NAME: ${DOMAIN_NAME-fusion}
      APACHE_DOCUMENT_ROOT: ${APACHE_DOCUMENT_ROOT-/var/www/html}
      APACHE_PORT: ${APACHE_PORT-5000}
  database:
    build:
      context: .
      dockerfile: "./Dockerfile.mysql"
    container_name: "${COMPOSE_PROJECT_NAME}-DB"
    restart: "always"
    ports:
      - "127.0.0.1:${HOST_MACHINE_MYSQL_PORT}:3306"
    volumes:
      - type: bind
        source: ${MYSQL_INITDB_DIR-./config/initdb}
        target: /docker-entrypoint-initdb.d
      - type: volume
        source: ${MYSQL_DATA_DIR-./data/mysql}
        target: /var/lib/mysql
      - type: bind
        source: ${MYSQL_LOG_DIR-./logs/mysql}
        target: /var/log/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
  phpmyadmin:
    image: phpmyadmin
    container_name: "${COMPOSE_PROJECT_NAME}-PMA"
    restart: always
    ports:
      - "${HOST_MACHINE_PMA_PORT}:80"
    environment:
      PMA_HOST: database
      PMA_PORT: ${HOST_MACHINE_MYSQL_PORT}-3306
      UPLOAD_LIMIT: ${UPLOAD_LIMIT}
      MEMORY_LIMIT: ${MEMORY_LIMIT}
  proxy:
    image: nginx
    # build:
    #   context: .
    #   dockerfile: "./Dockerfile.nginx"
    container_name: "${COMPOSE_PROJECT_NAME}-proxy"
    restart: "always"
    volumes:
      - type: bind
        source: ${NGINX_CONFIG-./config/nginx/nginx.conf}
        target: /etc/nginx/nginx.conf
    ports:
      - "${HOST_MACHINE_NGINX}:80"
    depends_on:
      - web1
      - web2
volumes:
  log_vol:
    external: true
  mysql_data:
    external: true
